Pequena explica√ß√£o aprendizado üìù
Bom, houve um pulo da aula 01 para a aula 07, isso ocorreu pois da aula 2 at√© a aula 05, √© ensinando a instalar o python3 e o editor no computador, ou celular 
especificamente na aula 3 e 5, a aula 2 √© explicando para que serve o python e como ele √© usado, por√©m ja foi dito isso na aula 01, e na aula 4, s√£o os primeiros comandos
no python, mas seria um texto muito vago sobre os primeiros comandos ent√£o preferi n√£o colocar nesse reposit√≥rio.
A respeito das aulas 06 e 07 eu aprendi a usar Tipos primitivos e Operadores Aritim√©ticos, colocarei Todas no mesmo reposit√≥rio pois assim consigo organizar melhor
como eu aprendi

Tipos primitivos üßÆ
S√£o eles, Float, Int, boal e str
- str: Significa string. Caso voc√™ n√£o coloque nenhum outro tipo primitivo ap√≥s o "=" que significa "recebe" a fun√ß√£o ser√° uma string, 
ent√£o eu n√£o entendi bem para que serve  esse comando, talvez para algo que ainda n√£o sei, mas surgiu uma ideia enquanto pensava sobre,
talvez eu poderia colocar uma string dentro de um inteiro, mas √© s√≥ um chute meu

- int: serve para definir a fun√ß√£o como um inteiro, ent√£o por exemplo se eu escrevesse:
Idade = int(input('Qual sua idade? '))
Aqui eu criei uma variavel chamada Idade, e essa variavel recebe (=) a fun√ß√£o Inteiro (int) que √© chamada fun√ß√£o imbutida, o (input) se voc√™ traduzir
seria entrada, que da pra ter uma no√ß√£o de oque significa, mas ele quer dizer l√™ um valor digitado pelo usu√°rio e retorna depois em string, por√©m como eu coloquei
(int) antes do (input) o valor digitado pelo usu√°rio seria um inteiro, logo o usu√°rio n√£o poderia digitar uma palavra ou um n√∫mero decimal, pois ocorreria um erro

-Float: √â justamente os n√∫meros decimais, por√©m no python ou na gringa, que foi onde o python foi feito, ele √© chamado de n√∫mero flutuante.
Ele funciona igual ao (int) a diferen√ßa √© que ele te retorna um n√∫mero decimal, n√£o um n√∫mero inteiro, ent√£o se eu escrevesse 
Idade = int(input('Qual sua idade? ')) e o usurario respondesse 20, o programa retornaria 20,0 e n√£o apenas 20.

-Boal: Ele diz se algo √© verdadeiro ou falso, ent√£o por exemplo:
Palavra = bool(input("Digite algo: "))
print(Palavra)
Nessa fun√ß√£o, eu criei a variavel chama Palavra e atribu√≠ ela como bool, na segunda linha eu escrevi print(Palavra) aqui est√° dizendo basicamente Escreva(Vari√°vel)
Ent√£o quando o input digitar "Diga algo" e o usuario responder, oque o usuario disser ser√° atribu√≠do a vari√°vel, e ser√° escrito embaixo, mas assim eu estaria descartando
a fun√ß√£o imbutida (bool), com o bool, se o usuario disser "oi" esse Oi ser√° retornado como True, afinal Oi √© uma palavra, caso o usuario deixe em branco, ser√° retornado
como False, pois nada foi dito

Operadores Aritim√©ticos üî¢
Nessa aula aprendi como usar as opera√ß√µes aritim√©ticas no python3 e alguma delas s√£o representadas por outros simbolos diferentes do que aprendemos na escola
Segue as opera√ß√µes Disponiveis no python3 sem o uso de M√≥dulos
Adi√ß√£o: +
Subtra√ß√£o: -
Divis√£o: /
Multiplica√ß√£o: *
Pot√™ncia: **
Divis√£o inteira: //
Resto da Divis√£o: %
Todos n√≥s conhecemos as opera√ß√µesa at√© a parte de pot√™ncia, A divis√£o inteiro e o resto da divis√£o pode te pegar um pouco mas √© literalmente oque o nome diz.
A inteira seria o quociente sem a parte da virgula, ou seja sem adicionar mais um zero ap√≥s o resto e quen n√£o √© divisivel pelo divisor.
o Resto de divis√£o seria oque sobra, ou seja, o resto da divis√£o.
Exemplo: 5 dividido por 2, o resuldado dessa conta seria 2,5 por√©m o inteiro √© 2 e o resto √© 1.
Simbolo de igual: ele √© representado por dois = ou seja ==, pois se eu colocar apenas um = o python idenficar√° ele como "recebe" como foi dito na parte de Tipos primitivos

Ordem de Preced√™ncia ‚úç
1¬∫ (): Em uma equa√ß√£o parenteses sempre ser√£o prioridade                  3¬∫ *, /, %, //: Multiplica√ß√£o, Divis√£o, Inteiro e Reste Ser√£o prioridade ap√≥s a pot√™ncia
2¬∫ **: A pot√™ncia ser√° sempre prioridade ap√≥s os parenteses               4¬∫ +, -: Soma e Subtra√ß√£o n√£o tem prioridade nenhuma
